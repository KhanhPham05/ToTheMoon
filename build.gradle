buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://maven.parchmentmc.org" }
        //maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        //classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
//apply plugin: 'org.spongepowered.mixin'

version = '1.0'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: '2022.01.23-1.18.1'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {

            workingDirectory project.file('run')


            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"


            mods {
                tothemoon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"


            mods {
                tothemoon {
                    source sourceSets.main
                }
            }
        }

        /*data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'tothemoon',
                    '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/')

            mods {
                tothemoon {
                    source sourceSets.main
                }
            }
        }*/
    }
}

tasks.withType(JavaCompile) {
    options.forkOptions.jvmArgs += '-Xmx2G -Xms512m -XX:+HeapDumpOnOutOfMemoryError'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://www.cursemaven.com/"
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }

    maven {
        url = "https://maven.blamejared.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.1-39.1.2'
    runtimeOnly fg.deobf("curse.maven:the-one-probe-245211:3577512")
    runtimeOnly fg.deobf("curse.maven:ferritecore-429235:3550045")
    runtimeOnly fg.deobf("curse.maven:lazy-dfu-forge-460819:3544496")
    compileOnly fg.deobf("curse.maven:pipez-443900:3569514")
    //runtimeOnly fg.deobf("curse.maven:mekanism-268560:3590099")
    //runtimeOnly fg.deobf("curse.maven:shutup-experimental-settings-407174:3544525")
    implementation fg.deobf("curse.maven:immersive-engineering-231951:3587149")

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.1-65:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.1-65")

    implementation fg.deobf("curse.maven:patchouli-datagen-ptd-lib-585667:3671853")
    //annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "tothemoon",
                "Specification-Vendor"    : "tothemoonsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "tothemoonsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')