buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.13, 6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

base.archivesName = 'tothemoon'
group = 'com.khanhtypo'
version = "${mc_version}-2.0"

//java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'parchment', version: "2023.09.03-1.20.1"

    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {

            workingDirectory project.file('run')


            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'


            mods {
                tothemoon {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                tothemoon {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tothemoon',
                    '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/')

            mods {
                tothemoon {
                    source sourceSets.main
                }
            }
        }

        configureEach {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://www.cursemaven.com/"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

mixin {
    add sourceSets.main, 'ttm.mixin-refmap.json'
    config 'ttm.mixin.json'
}

dependencies {
    def mc = "net.neoforged:forge:${mc_version}-${forge_version}"
    minecraft mc

    runtimeOnly fg.deobf("curse.maven:ferritecore-429235:4574361")
    runtimeOnly fg.deobf("curse.maven:the-one-probe-245211:4629624")
    runtimeOnly fg.deobf("curse.maven:item-nbt-viewer-514135:4578522")

    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
    implementation(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${mc_version}-${patchouli_version}-FORGE:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${mc_version}-${patchouli_version}-FORGE")

    runtimeOnly fg.deobf("curse.maven:pipez-443900:4713656")

    implementation fg.deobf("curse.maven:zerocore-247921:4702626")

    runtimeOnly fg.deobf("curse.maven:extreme-reactors-250277:4744862")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "tothemoon",
                "Specification-Vendor"    : "khanhtypo",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "ttmsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "ttm.mixin.json"
        ])
    }
}


jar.finalizedBy('reobfJar')

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
        vendor.set(JvmVendorSpec.ADOPTIUM)
    }
    withSourcesJar()
}